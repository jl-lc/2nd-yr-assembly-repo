


ARM Macro Assembler    Page 1 


    1 00000000         ; ECE-222 Lab ... Winter 2013 term 
    2 00000000         ; Lab 3 sample code 
    3 00000000                 THUMB                        ; Thumb instruction
                                                             set 
    4 00000000                 AREA             My_code, CODE, READONLY
    5 00000000                 EXPORT           __MAIN
    6 00000000                 ENTRY
    7 00000000         __MAIN
    8 00000000         
    9 00000000         ; The following lines are similar to Lab-1 but use a def
                       ined address to make it easier.
   10 00000000         ; They just turn off all LEDs 
   11 00000000 F8DF A160       LDR              R10, =LED_BASE_ADR ; R10 is a p
                                                            ermenant pointer to
                                                             the base address f
                                                            or the LEDs, offset
                                                             of 0x20 and 0x40 f
                                                            or the ports
   12 00000004         
   13 00000004 F04F 4330       MOV              R3, #0xB0000000 ; Turn off thre
                                                            e LEDs on port 1  
   14 00000008 F8CA 3020       STR              R3, [r10, #0x20]
   15 0000000C F04F 037C       MOV              R3, #0x0000007C
   16 00000010 F8CA 3040       STR              R3, [R10, #0x40] ; Turn off fiv
                                                            e LEDs on port 2 
   17 00000014         
   18 00000014         ; This line is very important in your main program
   19 00000014         ; Initializes R11 to a 16-bit non-zero value and NOTHING
                        else can write to R11 !!
   20 00000014         
   21 00000014         
   22 00000014 F64A 3BCD       MOV              R11, #0xABCD ; Init the random 
                                                            number generator wi
                                                            th a non-zero numbe
                                                            r
   23 00000018 F000 F86E       BL               COUNTER
   24 0000001C         
   25 0000001C F04F 037C       MOV              R3, #0x007C
   26 00000020 4C51            LDR              R4, =FIO2CLR
   27 00000022 6023            STR              R3, [R4]
   28 00000024         
   29 00000024 F04F 4330       MOV              R3, #0xB0000000
   30 00000028 4C50            LDR              R4, =FIO1CLR
   31 0000002A 6023            STR              R3, [R4]
   32 0000002C         
   33 0000002C F000 F875 
                       loop    BL               RandomNum
   34 00000030 F644 6A20       MOV              R10, #0x4E20
   35 00000034 45D3            CMP              R11, R10
   36 00000036 DDF9            BLE              loop
   37 00000038 F248 6AA0       MOV              R10, #0x86A0
   38 0000003C F2C0 0A01       MOVT             R10, #0x0001
   39 00000040 45D3            CMP              R11, R10
   40 00000042 DAF3            BGE              loop
   41 00000044         
   42 00000044 4658            MOV              R0, R11
   43 00000046 F000 F884       BL               DELAY
   44 0000004A         
   45 0000004A F04F 5300       MOV              R3, #0x20000000



ARM Macro Assembler    Page 2 


   46 0000004E 4C48            LDR              R4, =FIO1SET
   47 00000050 6023            STR              R3, [R4]    ;led 28
   48 00000052         
   49 00000052 F04F 0600       MOV              R6, #0
   50 00000056 F04F 0001       MOV              R0, #1
   51 0000005A F000 F87A 
                       increment
                               BL               DELAY
   52 0000005E 4C45            LDR              R4, =FIO2PIN
   53 00000060 F8D4 9000       LDR              R9, [R4]
   54 00000064 F44F 6A80       MOV              R10, #0x400
   55 00000068 EA1A 0F09       TST              R10, R9
   56 0000006C F106 0601       ADD              R6, #1
   57 00000070 D1F3            BNE              increment
   58 00000072         
   59 00000072         
   60 00000072 F04F 07FF       MOV              R7, #0x000000FF
   61 00000076 46B4    RESULT  MOV              R12, R6
   62 00000078 F04F 0804       MOV              R8, #4
   63 0000007C F644 6020 
                       res     MOV              R0, #0x4E20
   64 00000080 4661            MOV              R1, R12
   65 00000082 EA07 0101       AND              R1, R7, R1
   66 00000086 F000 F80F       BL               DISPLAY_NUM
   67 0000008A F000 F862       BL               DELAY
   68 0000008E EA4F 2C1C       LSR              R12, #8
   69 00000092 F1B8 0801       SUBS             R8, #1
   70 00000096 F1B8 0F00       CMP              R8, #0
   71 0000009A D1EF            BNE              res
   72 0000009C         
   73 0000009C F24C 3050       MOV              R0, #0xC350
   74 000000A0 F000 F857       BL               DELAY
   75 000000A4 E7E7            B                RESULT
   76 000000A6         
   77 000000A6 E7C1            B                loop
   78 000000A8         
   79 000000A8         ;
   80 000000A8         ; Display the number in R3 onto the 8 LEDs
   81 000000A8 B506    DISPLAY_NUM
                               STMFD            R13!,{R1, R2, R14}
   82 000000AA         
   83 000000AA         ; Usefull commaands:  RBIT (reverse bits), BFC (bit fiel
                       d clear), LSR & LSL to shift bits left and right, ORR & 
                       AND and EOR for bitwise operations
   84 000000AA         
   85 000000AA         ;start here 
   86 000000AA F04F 037C       MOV              R3, #0x007C
   87 000000AE 4C2E            LDR              R4, =FIO2CLR
   88 000000B0 6023            STR              R3, [R4]
   89 000000B2         
   90 000000B2 F04F 4330       MOV              R3, #0xB0000000
   91 000000B6 4C2D            LDR              R4, =FIO1CLR
   92 000000B8 6023            STR              R3, [R4]
   93 000000BA         
   94 000000BA F04F 0501       MOV              R5, #1
   95 000000BE 4C2E            LDR              R4, =FIO2SET
   96 000000C0 F04F 0340       MOV              R3, #0x40
   97 000000C4         
   98 000000C4 4229    CHECK2  TST              R1, R5



ARM Macro Assembler    Page 3 


   99 000000C6 BF18 6023       STRNE            R3, [R4]
  100 000000CA 2B04            CMP              R3, #0x4
  101 000000CC EA4F 0353       LSR              R3, #1
  102 000000D0 EA4F 0545       LSL              R5, #1
  103 000000D4 D1F6            BNE              CHECK2
  104 000000D6         
  105 000000D6 F04F 4300       MOV              R3, #0x80000000
  106 000000DA 4C25            LDR              R4, =FIO1SET
  107 000000DC         
  108 000000DC F013 4F80 
                       CHECK1  TST              R3, #0x40000000
  109 000000E0 D104            BNE              LED1SKIP
  110 000000E2 4229            TST              R1, R5
  111 000000E4 BF18 6023       STRNE            R3, [R4]
  112 000000E8 EA4F 0545       LSL              R5, #1
  113 000000EC EA4F 0353 
                       LED1SKIP
                               LSR              R3, #1
  114 000000F0 F1B3 6F00       CMP              R3, #0x08000000
  115 000000F4 D1F2            BNE              CHECK1
  116 000000F6         
  117 000000F6 BD06            LDMFD            R13!,{R1, R2, R15}
  118 000000F8         
  119 000000F8 B506    COUNTER STMFD            R13!,{R1, R2, R14}
  120 000000FA         
  121 000000FA F04F 0100       MOV              R1, #0x0
  122 000000FE F44F 7280       MOV              R2, #0x100
  123 00000102 F04F 0300       MOV              R3, #0x0
  124 00000106         
  125 00000106 F7FF FFCF 
                       counter BL               DISPLAY_NUM
  126 0000010A F44F 707A       MOV              R0, #0x3E8  ;1000 times for 100
                                                            ms delay
  127 0000010E F000 F820       BL               DELAY
  128 00000112 3101            ADDS             R1, #1
  129 00000114 428A            CMP              R2, R1
  130 00000116         
  131 00000116 D1F6            BNE              counter
  132 00000118         
  133 00000118 BD06            LDMFD            R13!,{R1, R2, R15}
  134 0000011A         
  135 0000011A         ;
  136 0000011A         ; R11 holds a 16-bit random number via a pseudo-random s
                       equence as per the Linear feedback shift register (Fibon
                       acci) on WikiPedia
  137 0000011A         ; R11 holds a non-zero 16-bit number.  If a zero is fed 
                       in the pseudo-random sequence will stay stuck at 0
  138 0000011A         ; Take as many bits of R11 as you need.  If you take the
                        lowest 4 bits then you get a number between 1 and 15.
  139 0000011A         ;   If you take bits 5..1 you'll get a number between 0 
                       and 15 (assuming you right shift by 1 bit).
  140 0000011A         ;
  141 0000011A         ; R11 MUST be initialized to a non-zero 16-bit value at 
                       the start of the program OR ELSE!
  142 0000011A         ; R11 can be read anywhere in the code but must only be 
                       written to by this subroutine
  143 0000011A B50E    RandomNum
                               STMFD            R13!,{R1, R2, R3, R14}
  144 0000011C         



ARM Macro Assembler    Page 4 


  145 0000011C F40B 4100       AND              R1, R11, #0x8000
  146 00000120 F40B 5200       AND              R2, R11, #0x2000
  147 00000124 EA4F 0282       LSL              R2, #2
  148 00000128 EA81 0302       EOR              R3, R1, R2
  149 0000012C F40B 5180       AND              R1, R11, #0x1000
  150 00000130 EA4F 01C1       LSL              R1, #3
  151 00000134 EA83 0301       EOR              R3, R3, R1
  152 00000138 F40B 6180       AND              R1, R11, #0x0400
  153 0000013C EA4F 1141       LSL              R1, #5
  154 00000140 EA83 0301       EOR              R3, R3, R1  ; the new bit to go
                                                             into the LSB is pr
                                                            esent
  155 00000144 EA4F 33D3       LSR              R3, #15
  156 00000148 EA4F 0B4B       LSL              R11, #1
  157 0000014C EA4B 0B03       ORR              R11, R11, R3
  158 00000150         
  159 00000150 BD0E            LDMFD            R13!,{R1, R2, R3, R15}
  160 00000152         
  161 00000152         ;
  162 00000152         ;  Delay 0.1ms (100us) * R0 times
  163 00000152         ;   aim for better than 10% accuracy
  164 00000152         ;               The formula to determine the number of l
                       oop cycles is equal to Clock speed x Delay time / (#cloc
                       k cycles)
  165 00000152         ;               where clock speed = 4MHz and if you use 
                       the BNE or other conditional branch command, the #clock 
                       cycles =
  166 00000152         ;               2 if you take the branch, and 1 if you d
                       on't.
  167 00000152         
  168 00000152 B504    DELAY   STMFD            R13!,{R2, R14}
  169 00000154         ;
  170 00000154         ; code to generate a delay of 0.1mS * R0 times
  171 00000154         ; 400 / 3
  172 00000154 F04F 0285       MOV              R2, #0x85   ; Initialize R2 low
                                                            er word for countdo
                                                            wn
  173 00000158 FB02 F200       MUL              R2, R0
  174 0000015C 3A01    milidelay
                               SUBS             R2, #0x1    ; Decrement r2 and 
                                                            set the N,Z,C statu
                                                            s bits
  175 0000015E D1FD            BNE              milidelay   ; Loop until R2 is 
                                                            0
  176 00000160 BD04    exitDelay
                               LDMFD            R13!,{R2, R15}
  177 00000162         
  178 00000162         
  179 00000162 2009C000 
                       LED_BASE_ADR
                               EQU              0x2009c000  ; Base address of t
                                                            he memory that cont
                                                            rols the LEDs 
  180 00000162 4002C00C 
                       PINSEL3 EQU              0x4002c00c  ; Address of Pin Se
                                                            lect Register 3 for
                                                             P1[31:16]
  181 00000162 4002C010 
                       PINSEL4 EQU              0x4002c010  ; Address of Pin Se



ARM Macro Assembler    Page 5 


                                                            lect Register 4 for
                                                             P2[15:0]
  182 00000162         ; Usefull GPIO Registers
  183 00000162         ; FIODIR  - register to set individual pins as input or 
                       output
  184 00000162 2009C034 
                       FIO1PIN EQU              0x2009c034  ;- register to read
                                                             and write pins
  185 00000162 2009C054 
                       FIO2PIN EQU              0x2009c054  ;- register to read
                                                             and write pins
  186 00000162 2009C038 
                       FIO1SET EQU              0x2009c038  ;- register to set 
                                                            I/O pins to 1 by wr
                                                            iting a 1
  187 00000162 2009C058 
                       FIO2SET EQU              0x2009c058  ;- register to set 
                                                            I/O pins to 1 by wr
                                                            iting a 1
  188 00000162 2009C03C 
                       FIO1CLR EQU              0x2009c03c  ;- register to clr 
                                                            I/O pins to 0 by wr
                                                            iting a 1
  189 00000162 2009C05C 
                       FIO2CLR EQU              0x2009c05c  ;- register to clr 
                                                            I/O pins to 0 by wr
                                                            iting a 1
  190 00000162         
  191 00000162 00 00           ALIGN
  192 00000164         
  193 00000164                 END
              2009C000 
              2009C05C 
              2009C03C 
              2009C038 
              2009C054 
              2009C058 
              00000000 
              00000000 
              00000000 
Command Line: --debug --xref --cpu=Cortex-M3 --apcs=interwork --depend=Lab_3_pr
ogram.d -oLab_3_program.o -Ic:\Software\Keil\ARM\RV31\INC -Ic:\Software\Keil\AR
M\CMSIS\Include -Ic:\Software\Keil\ARM\Inc\NXP\LPC17xx --list=Lab_3_program.lst
 Lab_3_program.s



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Relocatable symbols

CHECK1 000000DC

Symbol: CHECK1
   Definitions
      At line 108 in file Lab_3_program.s
   Uses
      At line 115 in file Lab_3_program.s
Comment: CHECK1 used once
CHECK2 000000C4

Symbol: CHECK2
   Definitions
      At line 98 in file Lab_3_program.s
   Uses
      At line 103 in file Lab_3_program.s
Comment: CHECK2 used once
COUNTER 000000F8

Symbol: COUNTER
   Definitions
      At line 119 in file Lab_3_program.s
   Uses
      At line 23 in file Lab_3_program.s
Comment: COUNTER used once
DELAY 00000152

Symbol: DELAY
   Definitions
      At line 168 in file Lab_3_program.s
   Uses
      At line 43 in file Lab_3_program.s
      At line 51 in file Lab_3_program.s
      At line 67 in file Lab_3_program.s
      At line 74 in file Lab_3_program.s
      At line 127 in file Lab_3_program.s

DISPLAY_NUM 000000A8

Symbol: DISPLAY_NUM
   Definitions
      At line 81 in file Lab_3_program.s
   Uses
      At line 66 in file Lab_3_program.s
      At line 125 in file Lab_3_program.s

LED1SKIP 000000EC

Symbol: LED1SKIP
   Definitions
      At line 113 in file Lab_3_program.s
   Uses
      At line 109 in file Lab_3_program.s
Comment: LED1SKIP used once
My_code 00000000

Symbol: My_code
   Definitions
      At line 4 in file Lab_3_program.s
   Uses



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Relocatable symbols

      None
Comment: My_code unused
RESULT 00000076

Symbol: RESULT
   Definitions
      At line 61 in file Lab_3_program.s
   Uses
      At line 75 in file Lab_3_program.s
Comment: RESULT used once
RandomNum 0000011A

Symbol: RandomNum
   Definitions
      At line 143 in file Lab_3_program.s
   Uses
      At line 33 in file Lab_3_program.s
Comment: RandomNum used once
__MAIN 00000000

Symbol: __MAIN
   Definitions
      At line 7 in file Lab_3_program.s
   Uses
      At line 5 in file Lab_3_program.s
Comment: __MAIN used once
counter 00000106

Symbol: counter
   Definitions
      At line 125 in file Lab_3_program.s
   Uses
      At line 131 in file Lab_3_program.s
Comment: counter used once
exitDelay 00000160

Symbol: exitDelay
   Definitions
      At line 176 in file Lab_3_program.s
   Uses
      None
Comment: exitDelay unused
increment 0000005A

Symbol: increment
   Definitions
      At line 51 in file Lab_3_program.s
   Uses
      At line 57 in file Lab_3_program.s
Comment: increment used once
loop 0000002C

Symbol: loop
   Definitions
      At line 33 in file Lab_3_program.s
   Uses
      At line 36 in file Lab_3_program.s
      At line 40 in file Lab_3_program.s
      At line 77 in file Lab_3_program.s



ARM Macro Assembler    Page 3 Alphabetic symbol ordering
Relocatable symbols


milidelay 0000015C

Symbol: milidelay
   Definitions
      At line 174 in file Lab_3_program.s
   Uses
      At line 175 in file Lab_3_program.s
Comment: milidelay used once
res 0000007C

Symbol: res
   Definitions
      At line 63 in file Lab_3_program.s
   Uses
      At line 71 in file Lab_3_program.s
Comment: res used once
16 symbols



ARM Macro Assembler    Page 1 Alphabetic symbol ordering
Absolute symbols

FIO1CLR 2009C03C

Symbol: FIO1CLR
   Definitions
      At line 188 in file Lab_3_program.s
   Uses
      At line 30 in file Lab_3_program.s
      At line 91 in file Lab_3_program.s

FIO1PIN 2009C034

Symbol: FIO1PIN
   Definitions
      At line 184 in file Lab_3_program.s
   Uses
      None
Comment: FIO1PIN unused
FIO1SET 2009C038

Symbol: FIO1SET
   Definitions
      At line 186 in file Lab_3_program.s
   Uses
      At line 46 in file Lab_3_program.s
      At line 106 in file Lab_3_program.s

FIO2CLR 2009C05C

Symbol: FIO2CLR
   Definitions
      At line 189 in file Lab_3_program.s
   Uses
      At line 26 in file Lab_3_program.s
      At line 87 in file Lab_3_program.s

FIO2PIN 2009C054

Symbol: FIO2PIN
   Definitions
      At line 185 in file Lab_3_program.s
   Uses
      At line 52 in file Lab_3_program.s
Comment: FIO2PIN used once
FIO2SET 2009C058

Symbol: FIO2SET
   Definitions
      At line 187 in file Lab_3_program.s
   Uses
      At line 95 in file Lab_3_program.s
Comment: FIO2SET used once
LED_BASE_ADR 2009C000

Symbol: LED_BASE_ADR
   Definitions
      At line 179 in file Lab_3_program.s
   Uses
      At line 11 in file Lab_3_program.s
Comment: LED_BASE_ADR used once



ARM Macro Assembler    Page 2 Alphabetic symbol ordering
Absolute symbols

PINSEL3 4002C00C

Symbol: PINSEL3
   Definitions
      At line 180 in file Lab_3_program.s
   Uses
      None
Comment: PINSEL3 unused
PINSEL4 4002C010

Symbol: PINSEL4
   Definitions
      At line 181 in file Lab_3_program.s
   Uses
      None
Comment: PINSEL4 unused
9 symbols
357 symbols in table
